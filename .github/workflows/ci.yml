name: CI - Verificação e Testes

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  verify-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar Ambiente Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Instalar dependências do backend
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest-cov

      - name: Verificar Formatação e Qualidade do Código com Ruff
        working-directory: ./backend
        run: |
          ruff format --check .
          ruff check --output-format=github .

      - name: Rodar Testes e Gerar Relatório de Cobertura
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        run: pytest --cov=app --cov-report=xml --cov-report=term-missing

      - name: Enviar Relatório de Cobertura como Artefato
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage-report
          path: backend/coverage.xml