name: CI - Testes e Verificações

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    # ✅ 1. Inicia um contêiner do PostgreSQL para este job
    services:
      postgres:
        image: postgres:15 # Usa a imagem oficial do PostgreSQL
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432 # Mapeia a porta para o host do runner
        # Garante que o job só continue quando o banco de dados estiver pronto
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # Adiciona cache para acelerar instalações futuras

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Rodar os testes com Pytest
        # ✅ 2. Define a variável de ambiente para que a aplicação se conecte ao banco do serviço
        # O pytest usará esta URL para se conectar ao contêiner postgres iniciado acima
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        run: pytest